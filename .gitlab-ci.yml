image: williamyeh/ansible:ubuntu16.04

variables:
  TF_VAR_yc_token: ${YC_OAUTH_TOKEN}
  TF_VAR_yc_cloud_id: ${YC_CLOUD_ID}
  TF_VAR_yc_folder_id: ${YC_FOLDER_ID}

stages:
  - validate
  - infra
  - kube
  - postdeploy
  
before_script:
  - apt-get update > /dev/null
  - apt-get install -y curl jq ssh git unzip > /dev/null
  - pip install netaddr > /dev/null

  - wget https://releases.hashicorp.com/terraform/0.11.11/terraform_0.11.11_linux_amd64.zip > /dev/null
  - unzip terra*
  - mv terraform /usr/local/bin
  - rm -rf terra*

  - curl -s https://terraform-provider-yandex.website.yandexcloud.net/terraform-provider-yandex/install.sh | bash

  - chmod +x kube/*.sh

  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  - echo 'Ansible refuses to read from a world-writeable folder, hence' && chmod -v 700 $(pwd)/postdeploy/ansible

tf_validate:
  stage: validate
  only:
    - master
  script:
    - cd infra
    - terraform init -reconfigure -get=true -get-plugins=true
    - terraform validate -check-variables=true

Deploy Infra:
  stage: infra
  script:
    - echo "Start infra deployment."
    - ./infra/yc-vpc.sh
    - ./infra/yc-compute.sh
    - echo "Infra deployed."
  only:
    - master

Destroy:
  stage: infra
  script:
    - echo "Destroy infra"
    - ./infra/destroy.sh
  only:
    - master
  when: manual

Deploy Kubernetes:
  stage: kube
  script:
    - echo "Looks like YC VMs need some time to become ready after deployment..."
    - echo "So, will sleep for 200 seconds..."
    - sleep 200
    - echo "Start kubernetes deployment"
    - ./kube/make_inventory.sh
    - cat ./kube/kubespray_inventory/kube_hosts.ini
    - cd kube
    - git clone https://github.com/kubernetes-sigs/kubespray.git
    - cp -r kubespray_inventory kubespray/inventory/
    - cd kubespray
    - export ANSIBLE_FORCE_COLOR=1
    - ansible-playbook -i inventory/kubespray_inventory/kube_hosts.ini --user yc-user --become --become-user=root cluster.yml
    - echo "Kubernetes deployed."
  only:
    - master
  artifacts:
    name: kube_config
    paths:
      - ./kube/kubespray/inventory/kubespray_inventory/artifacts/admin.conf

Kubernetes Postdeploy:
  stage: postdeploy
  script:
    - echo "Start kubernetes post-deployment steps."
    - ./kube/make_inventory.sh
    - cp kube/kubespray_inventory/kube_hosts.ini postdeploy/ansible/inventory/kube_hosts.ini
    - cd postdeploy/ansible
    - export ANSIBLE_FORCE_COLOR=1
    - ansible-playbook -i inventory/kube_hosts.ini -e ansible_user=yc-user playbooks/postdeploy.yml
    - echo "Kubernetes post-deployment finished."
  only:
    - master
  artifacts:
    name: kube_admin_token
    paths:
      - ./postdeploy/ansible/inventory/artifacts/token.txt
